name: CI/CD - Docker Build & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          docker system prune -af
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          df -h

      # Setup Docker Buildx for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets. DOCKER_PASSWORD}}

      # Build and push backend image
      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/wntd-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/wntd-backend:${{ github.sha }}

      # Build and push frontend image
      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/wntd-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/wntd-frontend:${{ github.sha }}

      # SSH into EC2 and run deploy script
      - name: Deploy to EC2
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy deploy script & compose file
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 'sudo mkdir -p /opt/wntd'
          cat infra/docker-compose.prod.yml | ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 "sudo tee /opt/wntd/docker-compose.prod.yml > /dev/null"
          cat infra/deploy.sh | ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 "sudo tee /opt/wntd/deploy.sh > /dev/null && sudo chmod +x /opt/wntd/deploy.sh"

      # Install Docker on EC2
      - name: Install Docker on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 << 'EOF'
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg lsb-release
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
          sudo docker --version
          EOF

      - name: Run deploy script on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 \
          'sudo /opt/wntd/deploy.sh'
