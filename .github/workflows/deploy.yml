name: CI/CD - Docker Build & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Setup Docker Buildx for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build and push backend image
      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/wntd-backend:latest
            ${{ secrets.DOCKER_USERNAME }}/wntd-backend:${{ github.sha }}

      # Build and push frontend image
      - name: Build & Push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/wntd-frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/wntd-frontend:${{ github.sha }}

      # SSH into EC2 and run deploy script
      - name: Deploy to EC2
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy deploy script & compose file
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 'sudo mkdir -p /opt/wntd'
          scp -o StrictHostKeyChecking=no infra/docker-compose.prod.yml ubuntu@13.61.12.156:/opt/wntd/
          scp -o StrictHostKeyChecking=no infra/scripts/deploy.sh ubuntu@13.61.12.156:/opt/wntd/
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 'sudo chmod +x /opt/wntd/deploy.sh'

      - name: Run deploy script on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@13.61.12.156 \
          'sudo /opt/wntd/deploy.sh'
